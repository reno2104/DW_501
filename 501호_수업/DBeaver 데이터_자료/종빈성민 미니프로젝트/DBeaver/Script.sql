--SELECT ename, job  FROM emp


-- 사원이름조회
-- 조회 : select
-- 테이블선택 : FROM 
SELECT ename FROM emp

-- 사원번호 사원이름 입사날짜

SELECT empno,ename,hiredate FROM emp

-- 사원번호 , 사수번호 , 사원이름 급여조회

SELECT empno,mgr,ename,sal FROM emp

SELECT empno AS "사원 번호" FROM emp
-- AS 별칠

-- 사원번호 사원이름을 조회 as로 풀것


SELECT empno AS "사원 번호" , ename AS "사원 이름" FROM emp

SELECT empno,ename,job FROM emp WHERE job = "SALESMAN"

SELECT empno,ename,job FROM emp WHERE empno = 7782

SELECT ENAME FROM emp WHERE sal >= 1000 

SELECT ename AS "사원이름",job AS "직책명",sal AS "급여" FROM emp WHERE sal >= 2000

SELECT ename FROM emp WHERE sal >= 2000 AND job = "MANAGER"

SELECT ename,hiredate,job FROM emp WHERE HIREDATE = "1981-12-03" AND JOB = "ANALYST"

SELECT ENAME,hiredate FROM emp WHERE HIREDATE  >= "1981-09-08"

-- 급여총합

SELECT sum(SAL) FROM emp

-- 직업이 매니저인 사원 급여 총합

SELECT sum(SAL) FROM emp WHERE JOB = "MANAGER"  

SELECT avg(sal) FROM emp
-- avg 평균 max 최댓값 min 최소값

SELECT AVG(SAL) FROM emp WHERE deptno = 20

-- 날짜 함수date_format(날짜명 , "%Y년도,M월") 
SELECT date_format(hiredate,"%Y")AS "입사년도" FROM emp

SELECT date_format(hiredate,"%m") AS "입사월" FROM emp


SELECT deptno,loc FROM dept WHERE dname = "operations"

SELECT deptno,DNAME FROM DEPT WHERE LOC = "DALLAS" OR LOC = "BOSTON"

 

SELECT DEPTNO FROM EMP GROUP BY DEPTNO

-- 두테이블 간 공통된 데이터가 있다면
-- 조인가능
-- 조인은 2개 이상 테이블을 조회할 때 사용

SELECT * FROM emp AS E INNER JOIN dept AS d ON E.DEPTNO = D.DEPTNO

SELECT E.ENAME,E.HIREDATE,D.DNAME FROM EMP AS E INNER JOIN DEPT AS D ON D.DEPTNO = D.DEPTNO

SELECT E.EMPNO,D.LOC FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE E.JOB = "MANAGER"

SELECT E.EMPNO,E.ENAME,E.DEPTNO,D.DNAME FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE E.SAL >= 2000

SELECT COUNT(*),D.DNAME,D.LOC FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO GROUP BY E.DEPTNO



SELECT * FROM emp AS e INNER JOIN dept AS d ON e.DEPTNO  = d.DEPTNO

SELECT * FROM emp AS e RIGHT JOIN dept AS d ON e.DEPTNO = d.DEPTNO


SELECT sawon.empno,sawon.ename FROM emp AS sawon LEFT JOIN emp AS boss ON sawon.mgr = boss.empno WHERE sawon.mgr IS NULL

-- DELETE FROM emp WHERE ename = "윤재영"

DELETE FROM ep

truncate TABLE emp

-- 
--     CONSTRAINT PK_EMP PRIMARY KEY (EMPNO),
--     CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT(DEPTNO)
-- );
-- 
-- CREATE TABLE SALGRADE ( 
--     GRADE TINYINT,
--     LOSAL SMALLINT,
--     HISAL SMALLINT 
-- );
-- 
-- INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK');
-- INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
-- INSERT INTO DEPT VALUES (30,'SALES','CHICAGO');
-- INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON');
-- INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,STR_TO_DATE('17-12-1980','%d-%m-%Y'),800,NULL,20);
-- 
-- INSERT INTO EMP VALUES (7499,'ALLEN','SALESMAN',7698,STR_TO_DATE('20-2-1981','%d-%m-%Y'),1600,300,30);
-- INSERT INTO EMP VALUES (7521,'WARD','SALESMAN',7698,STR_TO_DATE('22-2-1981','%d-%m-%Y'),1250,500,30);
-- INSERT INTO EMP VALUES (7566,'JONES','MANAGER',7839,STR_TO_DATE('2-4-1981','%d-%m-%Y'),2975,NULL,20);
-- INSERT INTO EMP VALUES (7654,'MARTIN','SALESMAN',7698,STR_TO_DATE('28-9-1981','%d-%m-%Y'),1250,1400,30);
-- INSERT INTO EMP VALUES (7698,'BLAKE','MANAGER',7839,STR_TO_DATE('1-5-1981','%d-%m-%Y'),2850,NULL,30);
-- INSERT INTO EMP VALUES (7782,'CLARK','MANAGER',7839,STR_TO_DATE('9-6-1981','%d-%m-%Y'),2450,NULL,10);
-- INSERT INTO EMP VALUES (7788,'SCOTT','ANALYST',7566,STR_TO_DATE('13-7-1987','%d-%m-%Y')-85,3000,NULL,20);
-- 
-- INSERT INTO EMP VALUES (7839,'KING','PRESIDENT',NULL,STR_TO_DATE('17-11-1981','%d-%m-%Y'),5000,NULL,10);
-- INSERT INTO EMP VALUES (7844,'TURNER','SALESMAN',7698,STR_TO_DATE('8-9-1981','%d-%m-%Y'),1500,0,30);
-- INSERT INTO EMP VALUES (7876,'ADAMS','CLERK',7788,STR_TO_DATE('13-7-1987', '%d-%m-%Y'),1100,NULL,20);
-- INSERT INTO EMP VALUES (7900,'JAMES','CLERK',7698,STR_TO_DATE('3-12-1981','%d-%m-%Y'),950,NULL,30);
-- INSERT INTO EMP VALUES (7902,'FORD','ANALYST',7566,STR_TO_DATE('3-12-1981','%d-%m-%Y'),3000,NULL,20);
-- INSERT INTO EMP VALUES (7934,'MILLER','CLERK',7782,STR_TO_DATE('23-1-1982','%d-%m-%Y'),1300,NULL,10);
-- INSERT INTO SALGRADE VALUES (1,700,1200);
-- INSERT INTO SALGRADE VALUES (2,1201,1400);
-- INSERT INTO SALGRADE VALUES (3,1401,2000);
-- INSERT INTO SALGRADE VALUES (4,2001,3000);
-- INSERT INTO SALGRADE VALUES (5,3001,9999);
-- 
-- COMMIT;

SELECT ename,job,sal FROM emp

SELECT empno,ename,hiredate FROM emp WHERE mgr = 7839

SELECT * FROM emp WHERE sal <= 3000

SELECT e.ename,e.deptno,d.dname,d.loc FROM dept AS d INNER JOIN emp AS e ON e.deptno = d.deptno

SELECT sum(sal),d.dname FROM emp AS e INNER JOIN dept AS d ON e.deptno = d.deptno GROUP BY d.dname ORDER BY d.DNAMe 

SELECT e.ename,e.sal FROM emp AS e INNER JOIN dept AS d ON e.deptno = d.deptno WHERE d.loc = "NEW YORK" AND E.JOB = "MANAGER"

SELECT E.ENAME,D.DNAME,E.JOB,ifnull(COMM,100) AS "COMM"  FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE date_format(HIREDATE,"%Y") >= 1983 


SELECT date_format(HIREDATE,"%Y"),ENAME,IFNULL(COMM,(SAL*0.1)),SAL FROM EMP WHERE date_format(HIREDATE,"%Y") >= 1983

SELECT E.ENAME,E.SAL,D.LOC FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE D.DNAME = "RESEARCH"

SELECT e.ename,e.sal FROM emp AS e INNER JOIN dept AS d ON e.deptno = d.deptno WHERE d.loc = "NEW YORK" AND E.JOB = "MANAGER"

SELECT E.ENAME,E.JOB,E.SAL,D.DNAME FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE E.COMM IS NOT NULL

SELECT E.ENAME,E.DEPTNO,D.DNAME,D.LOC FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE E.ENAME LIKE"A%"

SELECT
SAWON.ENAME,
SAWON.MGR,
BOSS.ENAME FROM EMP AS SAWON LEFT JOIN EMP AS BOSS ON SAWON.MGR = BOSS.EMPNO WHERE BOSS.ENAME IS NULL



SELECT sawon.ename AS "부사수 이름",
sawon.empno AS "부사수 번호",
sawon.mgr AS "사수 번호",
boss.ename AS "사수 이름",
boss.empno AS "사수 번호"
FROM emp AS sawon INNER JOIN emp AS boss ON sawon.mgr = boss.empno 

SELECT E.ENAME,E.EMPNO,D.EMPNO,D.ENAME FROM EMP AS E INNER JOIN EMP AS D ON E.MGR = D.EMPNO WHERE D.EMPNO = 7698

SELECT E.ENAME,E.HIREDATE,D.ENAME,D.HIREDATE FROM EMP AS E INNER JOIN EMP AS D ON E.MGR = D.EMPNO WHERE E.HIREDATE < D.HIREDATE

SELECT E.EMPNO,E.ENAME,E.SAL,D.DNAME FROM EMP AS E INNER JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO WHERE (E.JOB="MANAGER" OR E.JOB="CLERK") AND DATE_FORMAT(HIREDATE,"%Y") = 1982

SELECT e.SAL,e.ename,d.dname FROM emp AS e RIGHT JOIN dept AS d ON e.deptno = d.deptno
-- GROUP BY d.dname ORDER BY SUM(SAL) DESC

SELECT SAWON.ENAME,BOSS.ENAME,SAWON.DEPTNO,D.DNAME,D.LOC FROM EMP AS SAWON INNER JOIN EMP AS BOSS ON SAWON.MGR = BOSS.EMPNO RIGHT JOIN DEPT AS D ON SAWON.DEPTNO = D.DEPTNO  

SELECT SAWON.EMPNO,
SAWON.ENAME,
BOSS.EMPNO,
BOSS.ENAME,
BOSS.SAL,
D.DNAME 
FROM EMP AS SAWON 
INNER JOIN EMP AS BOSS ON SAWON.MGR = BOSS.EMPNO 
inner JOIN DEPT AS D ON SAWON.DEPTNO = D.DEPTNO
WHERE D.LOC = "CHICAGO" AND BOSS.SAL < 5000
ORDER BY SAWON.HIREDATE 

SELECT date_format(HIREDATE,"%m"),COUNT(*) FROM EMP GROUP BY date_format(HIREDATE,"%M") ORDER BY date_format(HIREDATE,"%m")

SELECT E.EMPNO,D.DNAME,D.LOC,COUNT(E.DEPTNO) FROM EMP AS E RIGHT JOIN DEPT AS D ON E.DEPTNO = D.DEPTNO GROUP BY D.DNAME

SELECT ENAME,EMPNO,date_format(HIREDATE,"%m") FROM EMP WHERE  date_format(HIREDATE,"%m") = 9

SELECT SUM(SAL),AVG(SAL) FROM EMP WHERE JOB = "SALESMAN" AND HIREDATE > "1981-02-22"

INSERT INTO EMP(EMPNO,ENAME,JOB,HIREDATE) VALUES(8080,"홍길동","MANAGER",NOW())

UPDATE EMP SET MGR = 7839 , SAL = 500 WHERE EMPNO = 8080

DELETE FROM EMP WHERE EMPNO = 8080

SELECT SAWON.ENAME,BOSS.ENAME,D.DEPTNO,D.DNAME,D.LOC FROM EMP AS SAWON INNER JOIN EMP AS BOSS ON SAWON.MGR = BOSS.EMPNO RIGHT JOIN DEPT AS D ON SAWON.DEPTNO = D.DEPTNO


SELECT SAWON.ENAME,BOSS.ENAME,D.DEPTNO,D.DNAME,D.LOC FROM EMP AS SAWON INNER JOIN EMP AS BOSS ON SAWON.MGR = BOSS.EMPNO RIGHT JOIN DEPT AS D ON SAWON.DEPTNO = D.DEPTNO

 SELECT ENAME,COMM FROM EMP WHERE COMM IS not NULL 
--  IFnull(comm,100) , IS NULL 널값인것, IS NOT NULL 
 
 SELECT sum(sal),avg(sal),count(*) FROM emp GROUP BY deptno ORDER BY count(*) desc 
 
 SELECT IFnull(comm,100) FROM emp WHERE comm IS NULL 
 
SELECT sal FROM emp WHERE sal > 1000 GROUP BY deptno ORDER BY sal ASC

SELECT COUNT(*) FROM EMP WHERE JOB = "MANAGER"

SELECT 
COUNT(*) AS "모든 사원 수",
(SELECT COUNT(*) FROM EMP WHERE JOB = "MANAGER") AS "MANAGER 사원 수"
FROM EMP  

SELECT 
COUNT(*) AS "CLERK인 사원수",
(SELECT COUNT(*) FROM EMP WHERE MGR IS NOT NULL) AS "사수가 있는 사원 수"
FROM EMP WHERE JOB = "CLERK"

SELECT DEPTNO FROM EMP GROUP BY DEPTNO HAVING COUNT(*) > 4

-- FROM 절에 오는 서브쿼리를 인라인 뷰라고 한다;

SELECT E.DEPTNO FROM
(SELECT DEPTNO FROM EMP GROUP BY DEPTNO HAVING COUNT(*) > 4)
AS SUB INNER JOIN EMP AS E ON SUB.DEPTNO = E.DEPTNO

SELECT DEPTNO FROM EMP WHERE DEPTNO != 10


SELECT * FROM EMP WHERE EMPNO = (SELECT EMPNO FROM EMP WHERE MGR IS NULL)

SELECT * FROM EMP WHERE MGR IS NULL

INSERT INTO EMP (EMPNO,ENAME) VALUES (1,"홍길동")

INSERT INTO EMP (EMPNO) VALUES (2)

-- INSERT INTO EMP (ENAME) VALUES ("2")



-- 상품테이블 생성
-- CREATE(테이블생성),DROP)(테이블 삭제),ALTER(테이블 수정) : DDL
CREATE TABLE PRODUCT(
	PRODUCT_ID INT(4)AUTO_INCREMENT PRIMARY KEY,
	PRODUCT_PRICE INT(4) COMMENT '물품가',
	CREATE_AT DATETIME COMMENT '입고 날짜',
	SHIPMENT_PRICE INT(4) COMMENT '출하가',
	A_BRAND_NAME VARCHAR(30) COMMENT 'A 브랜드 명',
	B_BRAND_NAME VARCHAR(30) COMMENT 'B 브랜드 명',
	C_BRAND_NAME VARCHAR(30) COMMENT 'C 브랜드 명'
	) 
	
	DROP table products

INSERT INTO product(PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,A_BRAND_NAME) VALUES (3000,NOW(),5000,"NIKE AIR POS")

INSERT INTO product(PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,B_BRAND_NAME) VALUES (3000,NOW(),5000,"아디다스")

INSERT INTO product(PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,A_BRAND_NAME,B_BRAND_NAME,C_BRAND_NAME) VALUES (3000,NOW(),5000,"나이키","아디다스","코닥");


CREATE TABLE brand(
brand_id int(4) AUTO_INCREMENT PRIMARY KEY,
brand_name varchar(30) comment "브랜드 명"
)

CREATE TABLE PRODUCT(
	PRODUCT_ID INT(4)AUTO_INCREMENT PRIMARY KEY,
	PRODUCT_PRICE INT(4) COMMENT '물품가',
	CREATE_AT DATETIME COMMENT '입고 날짜',
	SHIPMENT_PRICE INT(4) COMMENT '출하가',
	brand_id int(4) commENt '브랜드 번호',
	FOREIGN KEY (brand_id) REFERENCES brand(brand_id) ON DELETE CASCADE 
	) 
	
INSERT INTO BRAND (BRAND_NAME)	VALUES ("나이키")

INSERT INTO BRAND (BRAND_NAME)	VALUES ("아디다스")

INSERT INTO BRAND (BRAND_NAME)	VALUES ("코닥")

INSERT INTO BRAND (BRAND_NAME)	VALUES ("톰브라운")

INSERT INTO BRAND (BRAND_NAME)	VALUES ("버버리")

INSERT INTO product (PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,epl.eplbrand_id) VALUES (5000,NOW(),3000,1)

INSERT INTO product (PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,brand_id) VALUES (5000,NOW(),3000,2)

INSERT INTO product (PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,brand_id) VALUES (5000,NOW(),3000,3)

INSERT INTO product (PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,brand_id) VALUES (5000,NOW(),3000,4)

INSERT INTO product (PRODUCT_PRICE,CREATE_AT,SHIPMENT_PRICE,brand_id) VALUES (5000,NOW(),3000,5)

UPDATE product SET PRODUCT_PRICE = 9000, SHIPMENT_PRICE  = 7000 WHERE PRODUCT_ID = 5

SELECT PRO.PRODUCT_PRICE,PRO.SHIPMENT_PRICE,PRO.CREATE_AT,BRAND.BRAND_NAME FROM product AS PRO INNER JOIN BRAND AS BRAND ON PRO.brand_id  = brand.brand_id  ORDER BY CREATE_AT DESC